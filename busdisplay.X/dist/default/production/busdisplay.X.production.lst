

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 01 23:31:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F570
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	jmp_tab,global,class=ENTRY,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0xC,4
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F570 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000B                     	;# 
    63  0021                     	;# 
    64  0025                     	;# 
    65  0026                     	;# 
    66  0027                     	;# 
    67  0028                     	;# 
    68  0029                     	;# 
    69  002A                     	;# 
    70  0061                     	;# 
    71  0065                     	;# 
    72  0065                     	;# 
    73  0066                     	;# 
    74  0067                     	;# 
    75  0068                     	;# 
    76  0069                     	;# 
    77                           
    78                           	psect	idataBANK1
    79  068                     __pidataBANK1:
    80                           
    81                           ;initializer for _digits
    82  068  08A0               	retlw	160
    83  069  08B7               	retlw	183
    84  06A  08C4               	retlw	196
    85  06B  0885               	retlw	133
    86  06C  0893               	retlw	147
    87  06D  0889               	retlw	137
    88  06E  0888               	retlw	136
    89  06F  08B1               	retlw	177
    90  070  0880               	retlw	128
    91  071  0881               	retlw	129
    92  072  0890               	retlw	144
    93  073  088A               	retlw	138
    94  074  08E8               	retlw	232
    95  075  0886               	retlw	134
    96  076  08C8               	retlw	200
    97  077  08D8               	retlw	216
    98  0006                     _PORTA	set	6
    99  0008                     _PORTC	set	8
   100  0007                     _PORTB	set	7
   101  0008                     _TRISC	set	8
   102  0007                     _TRISB	set	7
   103  0006                     _TRISA	set	6
   104  0000                     _OPTION	set	0
   105  003B                     _RB3	set	59
   106  003C                     _RB4	set	60
   107  003D                     _RB5	set	61
   108  0038                     _RB0	set	56
   109  0028                     _CM2CON0	set	40
   110  0027                     _CM1CON0	set	39
   111  002A                     _ANSEL	set	42
   112                           
   113                           	psect	cinit
   114  003                     start_initialization:	
   115                           ; #config settings
   116                           
   117  003                     __initialization:
   118                           
   119                           ; Initialize objects allocated to BANK1
   120  003  0011               	movlb	1	; select bank1
   121  004  04C3  04A3  0968  04C3  04A3  	fcall	__pidataBANK1	;fetch initializer
   122  009  0030               	movwf	__pdataBANK1& (0+31)
   123  00A  04C3  04A3  0969  04C3  04A3  	fcall	__pidataBANK1+1	;fetch initializer
   124  00F  0031               	movwf	(__pdataBANK1+1)& (0+31)
   125  010  04C3  04A3  096A  04C3  04A3  	fcall	__pidataBANK1+2	;fetch initializer
   126  015  0032               	movwf	(__pdataBANK1+2)& (0+31)
   127  016  04C3  04A3  096B  04C3  04A3  	fcall	__pidataBANK1+3	;fetch initializer
   128  01B  0033               	movwf	(__pdataBANK1+3)& (0+31)
   129  01C  04C3  04A3  096C  04C3  04A3  	fcall	__pidataBANK1+4	;fetch initializer
   130  021  0034               	movwf	(__pdataBANK1+4)& (0+31)
   131  022  04C3  04A3  096D  04C3  04A3  	fcall	__pidataBANK1+5	;fetch initializer
   132  027  0035               	movwf	(__pdataBANK1+5)& (0+31)
   133  028  04C3  04A3  096E  04C3  04A3  	fcall	__pidataBANK1+6	;fetch initializer
   134  02D  0036               	movwf	(__pdataBANK1+6)& (0+31)
   135  02E  04C3  04A3  096F  04C3  04A3  	fcall	__pidataBANK1+7	;fetch initializer
   136  033  0037               	movwf	(__pdataBANK1+7)& (0+31)
   137  034  04C3  04A3  0970  04C3  04A3  	fcall	__pidataBANK1+8	;fetch initializer
   138  039  0038               	movwf	(__pdataBANK1+8)& (0+31)
   139  03A  04C3  04A3  0971  04C3  04A3  	fcall	__pidataBANK1+9	;fetch initializer
   140  03F  0039               	movwf	(__pdataBANK1+9)& (0+31)
   141  040  04C3  04A3  0972  04C3  04A3  	fcall	__pidataBANK1+10	;fetch initializer
   142  045  003A               	movwf	(__pdataBANK1+10)& (0+31)
   143  046  04C3  04A3  0973  04C3  04A3  	fcall	__pidataBANK1+11	;fetch initializer
   144  04B  003B               	movwf	(__pdataBANK1+11)& (0+31)
   145  04C  04C3  04A3  0974  04C3  04A3  	fcall	__pidataBANK1+12	;fetch initializer
   146  051  003C               	movwf	(__pdataBANK1+12)& (0+31)
   147  052  04C3  04A3  0975  04C3  04A3  	fcall	__pidataBANK1+13	;fetch initializer
   148  057  003D               	movwf	(__pdataBANK1+13)& (0+31)
   149  058  04C3  04A3  0976  04C3  04A3  	fcall	__pidataBANK1+14	;fetch initializer
   150  05D  003E               	movwf	(__pdataBANK1+14)& (0+31)
   151  05E  04C3  04A3  0977  04C3  04A3  	fcall	__pidataBANK1+15	;fetch initializer
   152  063  003F               	movwf	(__pdataBANK1+15)& (0+31)
   153  064                     end_of_initialization:	
   154                           ;End of C runtime variable initialization code
   155                           
   156  064                     __end_of__initialization:
   157  064  0010               	movlb	0
   158  065  04C3  04A3  0B2B   	ljmp	_main	;jump to C main() function
   159                           
   160                           	psect	dataBANK1
   161  030                     __pdataBANK1:
   162  030                     _digits:
   163  030                     	ds	16
   164                           
   165                           	psect	cstackBANK0
   166  010                     __pcstackBANK0:
   167  010                     ?_main:
   168  010                     ?___awdiv:	
   169                           ; 2 bytes @ 0x0
   170                           
   171  010                     ?___awmod:	
   172                           ; 2 bytes @ 0x0
   173                           
   174  010                     ___awdiv@divisor:	
   175                           ; 2 bytes @ 0x0
   176                           
   177  010                     ___awmod@divisor:	
   178                           ; 2 bytes @ 0x0
   179                           
   180                           
   181                           ; 2 bytes @ 0x0
   182  010                     	ds	2
   183  012                     ___awdiv@dividend:
   184  012                     ___awmod@dividend:	
   185                           ; 2 bytes @ 0x2
   186                           
   187                           
   188                           ; 2 bytes @ 0x2
   189  012                     	ds	2
   190  014                     ___awdiv@counter:
   191  014                     ___awmod@counter:	
   192                           ; 1 bytes @ 0x4
   193                           
   194                           
   195                           ; 1 bytes @ 0x4
   196  014                     	ds	1
   197  015                     ___awdiv@sign:
   198  015                     ___awmod@sign:	
   199                           ; 1 bytes @ 0x5
   200                           
   201                           
   202                           ; 1 bytes @ 0x5
   203  015                     	ds	1
   204  016                     ___awdiv@quotient:
   205                           
   206                           ; 2 bytes @ 0x6
   207  016                     	ds	2
   208  018                     ??_main:
   209                           
   210                           ; 1 bytes @ 0x8
   211  018                     	ds	2
   212  01A                     main@t:
   213                           
   214                           ; 2 bytes @ 0xA
   215  01A                     	ds	2
   216                           
   217                           	psect	cstackCOMMON
   218  000                     __pcstackCOMMON:
   219  000                     ??___awdiv:
   220  000                     ??___awmod:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           	psect	maintext
   225  12B                     __pmaintext:	
   226                           ; 1 bytes @ 0x0
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 32 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  t               2   10[BANK0 ] int 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  2   36[None  ] int 
   239 ;; Registers used:
   240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : B07/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK4   BANK2   BANK5   BANK6   BANK7
   246 ;;      Params:         0       0       0       0       0       0       0       0       0
   247 ;;      Locals:         0       2       0       0       0       0       0       0       0
   248 ;;      Temps:          0       2       0       0       0       0       0       0       0
   249 ;;      Totals:         0       4       0       0       0       0       0       0       0
   250 ;;Total ram usage:        4 bytes
   251 ;; Hardware stack levels required when called: 1
   252 ;; This function calls:
   253 ;;		___awdiv
   254 ;;		___awmod
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           
   261                           ;psect for function _main
   262  12B                     _main:
   263  12B                     l782:	
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   266                           
   267                           
   268                           ;main.c: 34:     int t;;main.c: 36:     OPTION = 0xFF;
   269  12B  0CFF               	movlw	255
   270  12C  0002               	option
   271                           
   272                           ;main.c: 38:     TRISA = 0xFF;
   273  12D  0CFF               	movlw	255
   274  12E  0006               	tris	6
   275                           
   276                           ;main.c: 39:     TRISB = 0xC7;
   277  12F  0CC7               	movlw	199
   278  130  0007               	tris	7
   279                           
   280                           ;main.c: 40:     TRISC = 0x00;
   281  131  0C00               	movlw	0
   282  132  0008               	tris	8
   283  133                     l784:
   284                           
   285                           ;main.c: 42:     PORTB = 0x00;
   286  133  0010               	movlb	0	; select bank0
   287  134  0067               	clrf	7	;volatile
   288  135                     l786:
   289                           
   290                           ;main.c: 43:     PORTC = 0xFF;
   291  135  0CFF               	movlw	255
   292  136  0028               	movwf	8	;volatile
   293  137                     l788:
   294                           
   295                           ;main.c: 45:     ANSEL = 0x00;
   296  137  0011               	movlb	1	; select bank1
   297  138  006A               	clrf	10	;volatile
   298  139                     l790:
   299                           
   300                           ;main.c: 46:     CM1CON0 &= ~0x8;
   301  139  0CF7               	movlw	247
   302  13A  002F               	movwf	btemp+3
   303  13B  020F               	movf	btemp+3,w
   304  13C  0167               	andwf	7,f	;volatile
   305  13D                     l792:
   306                           
   307                           ;main.c: 47:     CM2CON0 &= ~0x8;
   308  13D  0CF7               	movlw	247
   309  13E  002F               	movwf	btemp+3
   310  13F  020F               	movf	btemp+3,w
   311  140  0168               	andwf	8,f	;volatile
   312  141                     l37:	
   313                           ;main.c: 49:     while(1)
   314                           
   315  141  0004               	clrwdt	;# 
   316                           
   317                           ;main.c: 53:         if(RB0 == 1)
   318  142  0010               	movlb	0	; select bank0
   319  143  0707               	btfss	7,0	;volatile
   320  144  0B46               	goto	u411
   321  145  0B47               	goto	u410
   322  146                     u411:
   323  146  0B82               	goto	l814
   324  147                     u410:
   325  147                     l794:
   326                           
   327                           ;main.c: 54:         {;main.c: 55:             t = PORTA;
   328  147  0206               	movf	6,w	;volatile
   329  148  002C               	movwf	btemp
   330  149  006D               	clrf	btemp+1
   331  14A  020C               	movf	wtemp0,w
   332  14B  003A               	movwf	main@t
   333  14C  020D               	movf	wtemp0+1,w
   334  14D  003B               	movwf	main@t+1
   335  14E                     l796:
   336                           
   337                           ;main.c: 58:             RB5 = 1;
   338  14E  05A7               	bsf	7,5	;volatile
   339  14F                     l798:
   340                           
   341                           ;main.c: 61:             PORTC = digits[t >> 4];
   342  14F  021B               	movf	main@t+1,w
   343  150  002D               	movwf	btemp+1
   344  151  021A               	movf	main@t,w
   345  152  002C               	movwf	btemp
   346  153  0C04               	movlw	4
   347  154  002E               	movwf	btemp+2
   348  155                     u425:
   349  155  034D               	rlf	btemp+1,w
   350  156  032D               	rrf	btemp+1,f
   351  157  032C               	rrf	btemp,f
   352  158  02EE               	decfsz	btemp+2,f
   353  159  0B55               	goto	u425
   354  15A  020C               	movf	wtemp0,w
   355  15B  002C               	movwf	btemp
   356  15C  0C30               	movlw	low (_digits| 0)
   357  15D  01CC               	addwf	btemp,w
   358  15E  0024               	movwf	4
   359  15F  0200               	movf	0,w
   360  160  0028               	movwf	8	;volatile
   361  161                     l800:
   362                           
   363                           ;main.c: 62:             RB4 = 0;
   364  161  0487               	bcf	7,4	;volatile
   365  162                     l802:
   366                           
   367                           ;main.c: 63:             _delay((unsigned long)((5)*(4000000/4000.0)));
   368  162  0C07               	movlw	7
   369  163  0010               	movlb	0	; select bank0
   370  164  0039               	movwf	??_main+1
   371  165  0C7C               	movlw	124
   372  166  0038               	movwf	??_main
   373  167                     u437:
   374  167  02F8               	decfsz	??_main,f
   375  168  0B67               	goto	u437
   376  169  02F9               	decfsz	??_main+1,f
   377  16A  0B67               	goto	u437
   378  16B                     l804:
   379                           
   380                           ;main.c: 64:             RB4 = 1;
   381  16B  0010               	movlb	0	; select bank0
   382  16C  0587               	bsf	7,4	;volatile
   383  16D                     l806:
   384                           
   385                           ;main.c: 68:             PORTC = digits[t & 0x0F];
   386  16D  021A               	movf	main@t,w
   387  16E  0E0F               	andlw	15
   388  16F  002C               	movwf	btemp
   389  170  0C30               	movlw	low (_digits| 0)
   390  171  01CC               	addwf	btemp,w
   391  172  0024               	movwf	4
   392  173  0200               	movf	0,w
   393  174  0028               	movwf	8	;volatile
   394  175                     l808:
   395                           
   396                           ;main.c: 69:             RB3 = 0;
   397  175  0467               	bcf	7,3	;volatile
   398  176                     l810:
   399                           
   400                           ;main.c: 70:             _delay((unsigned long)((5)*(4000000/4000.0)));
   401  176  0C07               	movlw	7
   402  177  0010               	movlb	0	; select bank0
   403  178  0039               	movwf	??_main+1
   404  179  0C7C               	movlw	124
   405  17A  0038               	movwf	??_main
   406  17B                     u447:
   407  17B  02F8               	decfsz	??_main,f
   408  17C  0B7B               	goto	u447
   409  17D  02F9               	decfsz	??_main+1,f
   410  17E  0B7B               	goto	u447
   411  17F                     l812:
   412                           
   413                           ;main.c: 71:             RB3 = 1;
   414  17F  0010               	movlb	0	; select bank0
   415  180  0567               	bsf	7,3	;volatile
   416                           
   417                           ;main.c: 73:         }
   418  181  0B41               	goto	l37
   419  182                     l814:
   420                           
   421                           ;main.c: 75:         {;main.c: 76:             t = PORTA;
   422  182  0206               	movf	6,w	;volatile
   423  183  002C               	movwf	btemp
   424  184  006D               	clrf	btemp+1
   425  185  020C               	movf	wtemp0,w
   426  186  003A               	movwf	main@t
   427  187  020D               	movf	wtemp0+1,w
   428  188  003B               	movwf	main@t+1
   429  189                     l816:
   430                           
   431                           ;main.c: 79:             PORTC = digits[t / 100];
   432  189  0C64               	movlw	100
   433  18A  0030               	movwf	___awdiv@divisor
   434  18B  0C00               	movlw	0
   435  18C  0031               	movwf	___awdiv@divisor+1
   436  18D  021B               	movf	main@t+1,w
   437  18E  0033               	movwf	___awdiv@dividend+1
   438  18F  021A               	movf	main@t,w
   439  190  0032               	movwf	___awdiv@dividend
   440  191  04C3  04A3  097B  04C3  04A3  	fcall	entry____awdiv
   441  196  0010               	movlb	0	; select bank0
   442  197  0210               	movf	?___awdiv,w
   443  198  002C               	movwf	wtemp0
   444  199  0211               	movf	?___awdiv+1,w
   445  19A  002D               	movwf	wtemp0+1
   446  19B  020C               	movf	wtemp0,w
   447  19C  002C               	movwf	btemp
   448  19D  0C30               	movlw	low (_digits| 0)
   449  19E  01CC               	addwf	btemp,w
   450  19F  0024               	movwf	4
   451  1A0  0200               	movf	0,w
   452  1A1  0028               	movwf	8	;volatile
   453  1A2                     l818:
   454                           
   455                           ;main.c: 80:             t = t % 100;
   456  1A2  0C64               	movlw	100
   457  1A3  0030               	movwf	___awmod@divisor
   458  1A4  0C00               	movlw	0
   459  1A5  0031               	movwf	___awmod@divisor+1
   460  1A6  021B               	movf	main@t+1,w
   461  1A7  0033               	movwf	___awmod@dividend+1
   462  1A8  021A               	movf	main@t,w
   463  1A9  0032               	movwf	___awmod@dividend
   464  1AA  04C3  04A3  0978  04C3  04A3  	fcall	entry____awmod
   465  1AF  0010               	movlb	0	; select bank0
   466  1B0  0211               	movf	?___awmod+1,w
   467  1B1  003B               	movwf	main@t+1
   468  1B2  0210               	movf	?___awmod,w
   469  1B3  003A               	movwf	main@t
   470  1B4                     l820:
   471                           
   472                           ;main.c: 81:             RB5 = 0;
   473  1B4  04A7               	bcf	7,5	;volatile
   474  1B5                     l822:
   475                           
   476                           ;main.c: 82:             _delay((unsigned long)((5)*(4000000/4000.0)));
   477  1B5  0C07               	movlw	7
   478  1B6  0010               	movlb	0	; select bank0
   479  1B7  0039               	movwf	??_main+1
   480  1B8  0C7C               	movlw	124
   481  1B9  0038               	movwf	??_main
   482  1BA                     u457:
   483  1BA  02F8               	decfsz	??_main,f
   484  1BB  0BBA               	goto	u457
   485  1BC  02F9               	decfsz	??_main+1,f
   486  1BD  0BBA               	goto	u457
   487  1BE                     l824:
   488                           
   489                           ;main.c: 83:             RB5 = 1;
   490  1BE  0010               	movlb	0	; select bank0
   491  1BF  05A7               	bsf	7,5	;volatile
   492  1C0                     l826:
   493                           
   494                           ;main.c: 87:             PORTC = digits[t / 10];
   495  1C0  0C0A               	movlw	10
   496  1C1  0030               	movwf	___awdiv@divisor
   497  1C2  0C00               	movlw	0
   498  1C3  0031               	movwf	___awdiv@divisor+1
   499  1C4  021B               	movf	main@t+1,w
   500  1C5  0033               	movwf	___awdiv@dividend+1
   501  1C6  021A               	movf	main@t,w
   502  1C7  0032               	movwf	___awdiv@dividend
   503  1C8  04C3  04A3  097B  04C3  04A3  	fcall	entry____awdiv
   504  1CD  0010               	movlb	0	; select bank0
   505  1CE  0210               	movf	?___awdiv,w
   506  1CF  002C               	movwf	wtemp0
   507  1D0  0211               	movf	?___awdiv+1,w
   508  1D1  002D               	movwf	wtemp0+1
   509  1D2  020C               	movf	wtemp0,w
   510  1D3  002C               	movwf	btemp
   511  1D4  0C30               	movlw	low (_digits| 0)
   512  1D5  01CC               	addwf	btemp,w
   513  1D6  0024               	movwf	4
   514  1D7  0200               	movf	0,w
   515  1D8  0028               	movwf	8	;volatile
   516  1D9                     l828:
   517                           
   518                           ;main.c: 88:             t = t % 10;
   519  1D9  0C0A               	movlw	10
   520  1DA  0030               	movwf	___awmod@divisor
   521  1DB  0C00               	movlw	0
   522  1DC  0031               	movwf	___awmod@divisor+1
   523  1DD  021B               	movf	main@t+1,w
   524  1DE  0033               	movwf	___awmod@dividend+1
   525  1DF  021A               	movf	main@t,w
   526  1E0  0032               	movwf	___awmod@dividend
   527  1E1  04C3  04A3  0978  04C3  04A3  	fcall	entry____awmod
   528  1E6  0010               	movlb	0	; select bank0
   529  1E7  0211               	movf	?___awmod+1,w
   530  1E8  003B               	movwf	main@t+1
   531  1E9  0210               	movf	?___awmod,w
   532  1EA  003A               	movwf	main@t
   533  1EB                     l830:
   534                           
   535                           ;main.c: 89:             RB4 = 0;
   536  1EB  0487               	bcf	7,4	;volatile
   537  1EC                     l832:
   538                           
   539                           ;main.c: 90:             _delay((unsigned long)((5)*(4000000/4000.0)));
   540  1EC  0C07               	movlw	7
   541  1ED  0010               	movlb	0	; select bank0
   542  1EE  0039               	movwf	??_main+1
   543  1EF  0C7C               	movlw	124
   544  1F0  0038               	movwf	??_main
   545  1F1                     u467:
   546  1F1  02F8               	decfsz	??_main,f
   547  1F2  0BF1               	goto	u467
   548  1F3  02F9               	decfsz	??_main+1,f
   549  1F4  0BF1               	goto	u467
   550  1F5                     l834:
   551                           
   552                           ;main.c: 91:             RB4 = 1;
   553  1F5  0010               	movlb	0	; select bank0
   554  1F6  0587               	bsf	7,4	;volatile
   555  1F7                     l836:
   556                           
   557                           ;main.c: 95:             PORTC = digits[t];
   558  1F7  0C30               	movlw	low (_digits| 0)
   559  1F8  01DA               	addwf	main@t,w
   560  1F9  0024               	movwf	4
   561  1FA  0200               	movf	0,w
   562  1FB  0028               	movwf	8	;volatile
   563  1FC  0B75               	goto	l808
   564  1FD  04C3  04A3  0A00   	ljmp	start
   565  200                     __end_of_main:
   566                           
   567                           	psect	text1
   568  39E                     __ptext1:	
   569 ;; *************** function ___awmod *****************
   570 ;; Defined at:
   571 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  divisor         2    0[BANK0 ] int 
   574 ;;  dividend        2    2[BANK0 ] int 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  sign            1    5[BANK0 ] unsigned char 
   577 ;;  counter         1    4[BANK0 ] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  2    0[BANK0 ] int 
   580 ;; Registers used:
   581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+3
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK4   BANK2   BANK5   BANK6   BANK7
   587 ;;      Params:         0       4       0       0       0       0       0       0       0
   588 ;;      Locals:         0       2       0       0       0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0       0       0
   590 ;;      Totals:         0       6       0       0       0       0       0       0       0
   591 ;;Total ram usage:        6 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function ___awmod
   602  39E                     ___awmod:
   603  39E                     l744:
   604  39E  0010               	movlb	0	; select bank0
   605  39F  0075               	clrf	___awmod@sign
   606  3A0                     l746:
   607  3A0  07F3               	btfss	___awmod@dividend+1,7
   608  3A1  0BA3               	goto	u321
   609  3A2  0BA4               	goto	u320
   610  3A3                     u321:
   611  3A3  0BAB               	goto	l752
   612  3A4                     u320:
   613  3A4                     l748:
   614  3A4  0272               	comf	___awmod@dividend,f
   615  3A5  0273               	comf	___awmod@dividend+1,f
   616  3A6  02B2               	incf	___awmod@dividend,f
   617  3A7  0643               	skipnz
   618  3A8  02B3               	incf	___awmod@dividend+1,f
   619  3A9                     l750:
   620  3A9  0075               	clrf	___awmod@sign
   621  3AA  02B5               	incf	___awmod@sign,f
   622  3AB                     l752:
   623  3AB  07F1               	btfss	___awmod@divisor+1,7
   624  3AC  0BAE               	goto	u331
   625  3AD  0BAF               	goto	u330
   626  3AE                     u331:
   627  3AE  0BB4               	goto	l756
   628  3AF                     u330:
   629  3AF                     l754:
   630  3AF  0270               	comf	___awmod@divisor,f
   631  3B0  0271               	comf	___awmod@divisor+1,f
   632  3B1  02B0               	incf	___awmod@divisor,f
   633  3B2  0643               	skipnz
   634  3B3  02B1               	incf	___awmod@divisor+1,f
   635  3B4                     l756:
   636  3B4  0210               	movf	___awmod@divisor,w
   637  3B5  0111               	iorwf	___awmod@divisor+1,w
   638  3B6  0643               	btfsc	3,2
   639  3B7  0BB9               	goto	u341
   640  3B8  0BBA               	goto	u340
   641  3B9                     u341:
   642  3B9  0BF1               	goto	l774
   643  3BA                     u340:
   644  3BA                     l758:
   645  3BA  0074               	clrf	___awmod@counter
   646  3BB  02B4               	incf	___awmod@counter,f
   647  3BC  0BC8               	goto	l764
   648  3BD                     l760:
   649  3BD  0C01               	movlw	1
   650  3BE  002C               	movwf	btemp
   651  3BF                     u355:
   652  3BF  0403               	clrc
   653  3C0  0370               	rlf	___awmod@divisor,f
   654  3C1  0371               	rlf	___awmod@divisor+1,f
   655  3C2  02EC               	decfsz	btemp,f
   656  3C3  0BBF               	goto	u355
   657  3C4                     l762:
   658  3C4  0C01               	movlw	1
   659  3C5  002F               	movwf	btemp+3
   660  3C6  020F               	movf	btemp+3,w
   661  3C7  01F4               	addwf	___awmod@counter,f
   662  3C8                     l764:
   663  3C8  07F1               	btfss	___awmod@divisor+1,7
   664  3C9  0BCB               	goto	u361
   665  3CA  0BCC               	goto	u360
   666  3CB                     u361:
   667  3CB  0BBD               	goto	l760
   668  3CC                     u360:
   669  3CC                     l766:
   670  3CC  0211               	movf	___awmod@divisor+1,w
   671  3CD  002D               	movwf	btemp+1
   672  3CE  0210               	movf	___awmod@divisor,w
   673  3CF  002C               	movwf	btemp
   674  3D0  020D               	movf	wtemp0+1,w
   675  3D1  0093               	subwf	___awmod@dividend+1,w
   676  3D2  0743               	skipz
   677  3D3  0BD6               	goto	u375
   678  3D4  020C               	movf	wtemp0,w
   679  3D5  0092               	subwf	___awmod@dividend,w
   680  3D6                     u375:
   681  3D6  0703               	skipc
   682  3D7  0BD9               	goto	u371
   683  3D8  0BDA               	goto	u370
   684  3D9                     u371:
   685  3D9  0BE4               	goto	l770
   686  3DA                     u370:
   687  3DA                     l768:
   688  3DA  0211               	movf	___awmod@divisor+1,w
   689  3DB  002D               	movwf	btemp+1
   690  3DC  0210               	movf	___awmod@divisor,w
   691  3DD  002C               	movwf	btemp
   692  3DE  020C               	movf	wtemp0,w
   693  3DF  00B2               	subwf	___awmod@dividend,f
   694  3E0  020D               	movf	wtemp0+1,w
   695  3E1  0703               	skipc
   696  3E2  00F3               	decf	___awmod@dividend+1,f
   697  3E3  00B3               	subwf	___awmod@dividend+1,f
   698  3E4                     l770:
   699  3E4  0C01               	movlw	1
   700  3E5  002C               	movwf	btemp
   701  3E6                     u385:
   702  3E6  0403               	clrc
   703  3E7  0331               	rrf	___awmod@divisor+1,f
   704  3E8  0330               	rrf	___awmod@divisor,f
   705  3E9  02EC               	decfsz	btemp,f
   706  3EA  0BE6               	goto	u385
   707  3EB                     l772:
   708  3EB  0C01               	movlw	1
   709  3EC  00B4               	subwf	___awmod@counter,f
   710  3ED  0743               	btfss	3,2
   711  3EE  0BF0               	goto	u391
   712  3EF  0BF1               	goto	u390
   713  3F0                     u391:
   714  3F0  0BCC               	goto	l766
   715  3F1                     u390:
   716  3F1                     l774:
   717  3F1  0215               	movf	___awmod@sign,w
   718  3F2  0643               	btfsc	3,2
   719  3F3  0BF5               	goto	u401
   720  3F4  0BF6               	goto	u400
   721  3F5                     u401:
   722  3F5  0BFB               	goto	l778
   723  3F6                     u400:
   724  3F6                     l776:
   725  3F6  0272               	comf	___awmod@dividend,f
   726  3F7  0273               	comf	___awmod@dividend+1,f
   727  3F8  02B2               	incf	___awmod@dividend,f
   728  3F9  0643               	skipnz
   729  3FA  02B3               	incf	___awmod@dividend+1,f
   730  3FB                     l778:
   731  3FB  0213               	movf	___awmod@dividend+1,w
   732  3FC  0031               	movwf	?___awmod+1
   733  3FD  0212               	movf	___awmod@dividend,w
   734  3FE  0030               	movwf	?___awmod
   735  3FF                     l212:
   736  3FF  001E               	return
   737  400                     __end_of___awmod:
   738                           
   739                           	psect	jmp_tab
   740  078                     __pjmp_tab:	
   741                           ;incstack = 0
   742                           ; Regs used in ___awmod: [wreg-fsr0h+status,2-btemp+1+btemp+3]
   743                           
   744  078                     entry____awmod:
   745  078  04C3  05A3  0B9E   	ljmp	___awmod
   746  07B                     entry____awdiv:	
   747                           ;incstack = 0
   748                           ; Regs used in ___awdiv: [wreg-fsr0h+status,2-btemp+1+btemp+3]
   749                           
   750  07B  04C3  04A3  0ABB   	ljmp	___awdiv
   751                           
   752                           	psect	text2
   753  0BB                     __ptext2:	
   754 ;; *************** function ___awdiv *****************
   755 ;; Defined at:
   756 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  divisor         2    0[BANK0 ] int 
   759 ;;  dividend        2    2[BANK0 ] int 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  quotient        2    6[BANK0 ] int 
   762 ;;  sign            1    5[BANK0 ] unsigned char 
   763 ;;  counter         1    4[BANK0 ] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2    0[BANK0 ] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+3
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK4   BANK2   BANK5   BANK6   BANK7
   773 ;;      Params:         0       4       0       0       0       0       0       0       0
   774 ;;      Locals:         0       4       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         0       8       0       0       0       0       0       0       0
   777 ;;Total ram usage:        8 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function ___awdiv
   788  0BB                     ___awdiv:
   789  0BB                     l698:
   790  0BB  0010               	movlb	0	; select bank0
   791  0BC  0075               	clrf	___awdiv@sign
   792  0BD                     l700:
   793  0BD  07F1               	btfss	___awdiv@divisor+1,7
   794  0BE  0AC0               	goto	u221
   795  0BF  0AC1               	goto	u220
   796  0C0                     u221:
   797  0C0  0AC8               	goto	l706
   798  0C1                     u220:
   799  0C1                     l702:
   800  0C1  0270               	comf	___awdiv@divisor,f
   801  0C2  0271               	comf	___awdiv@divisor+1,f
   802  0C3  02B0               	incf	___awdiv@divisor,f
   803  0C4  0643               	skipnz
   804  0C5  02B1               	incf	___awdiv@divisor+1,f
   805  0C6                     l704:
   806  0C6  0075               	clrf	___awdiv@sign
   807  0C7  02B5               	incf	___awdiv@sign,f
   808  0C8                     l706:
   809  0C8  07F3               	btfss	___awdiv@dividend+1,7
   810  0C9  0ACB               	goto	u231
   811  0CA  0ACC               	goto	u230
   812  0CB                     u231:
   813  0CB  0AD5               	goto	l712
   814  0CC                     u230:
   815  0CC                     l708:
   816  0CC  0272               	comf	___awdiv@dividend,f
   817  0CD  0273               	comf	___awdiv@dividend+1,f
   818  0CE  02B2               	incf	___awdiv@dividend,f
   819  0CF  0643               	skipnz
   820  0D0  02B3               	incf	___awdiv@dividend+1,f
   821  0D1                     l710:
   822  0D1  0C01               	movlw	1
   823  0D2  002F               	movwf	btemp+3
   824  0D3  020F               	movf	btemp+3,w
   825  0D4  01B5               	xorwf	___awdiv@sign,f
   826  0D5                     l712:
   827  0D5  0076               	clrf	___awdiv@quotient
   828  0D6  0077               	clrf	___awdiv@quotient+1
   829  0D7                     l714:
   830  0D7  0210               	movf	___awdiv@divisor,w
   831  0D8  0111               	iorwf	___awdiv@divisor+1,w
   832  0D9  0643               	btfsc	3,2
   833  0DA  0ADC               	goto	u241
   834  0DB  0ADD               	goto	u240
   835  0DC                     u241:
   836  0DC  0B1C               	goto	l736
   837  0DD                     u240:
   838  0DD                     l716:
   839  0DD  0074               	clrf	___awdiv@counter
   840  0DE  02B4               	incf	___awdiv@counter,f
   841  0DF  0AEB               	goto	l722
   842  0E0                     l718:
   843  0E0  0C01               	movlw	1
   844  0E1  002C               	movwf	btemp
   845  0E2                     u255:
   846  0E2  0403               	clrc
   847  0E3  0370               	rlf	___awdiv@divisor,f
   848  0E4  0371               	rlf	___awdiv@divisor+1,f
   849  0E5  02EC               	decfsz	btemp,f
   850  0E6  0AE2               	goto	u255
   851  0E7                     l720:
   852  0E7  0C01               	movlw	1
   853  0E8  002F               	movwf	btemp+3
   854  0E9  020F               	movf	btemp+3,w
   855  0EA  01F4               	addwf	___awdiv@counter,f
   856  0EB                     l722:
   857  0EB  07F1               	btfss	___awdiv@divisor+1,7
   858  0EC  0AEE               	goto	u261
   859  0ED  0AEF               	goto	u260
   860  0EE                     u261:
   861  0EE  0AE0               	goto	l718
   862  0EF                     u260:
   863  0EF                     l724:
   864  0EF  0C01               	movlw	1
   865  0F0  002C               	movwf	btemp
   866  0F1                     u275:
   867  0F1  0403               	clrc
   868  0F2  0376               	rlf	___awdiv@quotient,f
   869  0F3  0377               	rlf	___awdiv@quotient+1,f
   870  0F4  02EC               	decfsz	btemp,f
   871  0F5  0AF1               	goto	u275
   872  0F6                     l726:
   873  0F6  0211               	movf	___awdiv@divisor+1,w
   874  0F7  002D               	movwf	btemp+1
   875  0F8  0210               	movf	___awdiv@divisor,w
   876  0F9  002C               	movwf	btemp
   877  0FA  020D               	movf	wtemp0+1,w
   878  0FB  0093               	subwf	___awdiv@dividend+1,w
   879  0FC  0743               	skipz
   880  0FD  0B00               	goto	u285
   881  0FE  020C               	movf	wtemp0,w
   882  0FF  0092               	subwf	___awdiv@dividend,w
   883  100                     u285:
   884  100  0703               	skipc
   885  101  0B03               	goto	u281
   886  102  0B04               	goto	u280
   887  103                     u281:
   888  103  0B0F               	goto	l732
   889  104                     u280:
   890  104                     l728:
   891  104  0211               	movf	___awdiv@divisor+1,w
   892  105  002D               	movwf	btemp+1
   893  106  0210               	movf	___awdiv@divisor,w
   894  107  002C               	movwf	btemp
   895  108  020C               	movf	wtemp0,w
   896  109  00B2               	subwf	___awdiv@dividend,f
   897  10A  020D               	movf	wtemp0+1,w
   898  10B  0703               	skipc
   899  10C  00F3               	decf	___awdiv@dividend+1,f
   900  10D  00B3               	subwf	___awdiv@dividend+1,f
   901  10E                     l730:
   902  10E  0516               	bsf	___awdiv@quotient,0
   903  10F                     l732:
   904  10F  0C01               	movlw	1
   905  110  002C               	movwf	btemp
   906  111                     u295:
   907  111  0403               	clrc
   908  112  0331               	rrf	___awdiv@divisor+1,f
   909  113  0330               	rrf	___awdiv@divisor,f
   910  114  02EC               	decfsz	btemp,f
   911  115  0B11               	goto	u295
   912  116                     l734:
   913  116  0C01               	movlw	1
   914  117  00B4               	subwf	___awdiv@counter,f
   915  118  0743               	btfss	3,2
   916  119  0B1B               	goto	u301
   917  11A  0B1C               	goto	u300
   918  11B                     u301:
   919  11B  0AEF               	goto	l724
   920  11C                     u300:
   921  11C                     l736:
   922  11C  0215               	movf	___awdiv@sign,w
   923  11D  0643               	btfsc	3,2
   924  11E  0B20               	goto	u311
   925  11F  0B21               	goto	u310
   926  120                     u311:
   927  120  0B26               	goto	l740
   928  121                     u310:
   929  121                     l738:
   930  121  0276               	comf	___awdiv@quotient,f
   931  122  0277               	comf	___awdiv@quotient+1,f
   932  123  02B6               	incf	___awdiv@quotient,f
   933  124  0643               	skipnz
   934  125  02B7               	incf	___awdiv@quotient+1,f
   935  126                     l740:
   936  126  0217               	movf	___awdiv@quotient+1,w
   937  127  0031               	movwf	?___awdiv+1
   938  128  0216               	movf	___awdiv@quotient,w
   939  129  0030               	movwf	?___awdiv
   940  12A                     l199:
   941  12A  001E               	return
   942  12B                     __end_of___awdiv:
   943  000C                     btemp	set	12	;btemp
   944  000C                     wtemp0	set	12
   945  000E                     wtemp1	set	14
   946  000C                     ttemp0	set	12
   947  000C                     ltemp0	set	12
   948                           
   949                           	psect	config
   950                           
   951                           ;Config register CONFIG @ 0xFFF
   952                           ;	Oscillator
   953                           ;	FOSC = INTRC_IO, INTRC with I/O function on OSC2/CLKOUT
   954                           ;	Watchdog Timer Enable bit
   955                           ;	WDTE = ON, Enabled
   956                           ;	Code Protection bit
   957                           ;	CP = OFF, Code protection off
   958                           ;	Internal Oscillator Frequency Select
   959                           ;	IOSCFS = 4MHz, 4 MHz INTOSC Speed
   960                           ;	Code Protection bit - Flash Data Memory
   961                           ;	CPSW = OFF, Code protection off
   962                           ;	
   963                           ;	BOREN = ON, BOR Enabled
   964                           ;	
   965                           ;	DRTEN = ON, DRT Enabled
   966  0FFF                     	org	4095
   967  0FFF  03BC               	dw	956

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16     12      12
    BANK1            16      0      16
    BANK3            16      0       0
    BANK4            16      0       0
    BANK2            16      0       0
    BANK5            16      0       0
    BANK6            16      0       0
    BANK7            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1362
                                              8 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      C       C       4       75.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            10      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               10      0      10       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK3               10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0      1C       8        0.0%
BITBANK3            10      0       0       9        0.0%
BITBANK4            10      0       0      10        0.0%
BANK4               10      0       0      11        0.0%
BITBANK2            10      0       0      12        0.0%
BANK2               10      0       0      13        0.0%
DATA                 0      0      1C      14        0.0%
BITBANK5            10      0       0      15        0.0%
BANK5               10      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITBANK7            10      0       0      19        0.0%
BANK7               10      0       0      20        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 01 23:31:38 2021

                     l37 0141             ___awdiv@sign 0015                      l212 03FF  
                    l700 00BD                      l710 00D1                      l702 00C1  
                    l199 012A                      l720 00E7                      l712 00D5  
                    l704 00C6                      l800 0161                      l730 010E  
                    l722 00EB                      l714 00D7                      l706 00C8  
                    l810 0176                      l802 0162                      l740 0126  
                    l732 010F                      l724 00EF                      l716 00DD  
                    l708 00CC                      l820 01B4                      l812 017F  
                    l804 016B                      l734 0116                      l726 00F6  
                    l718 00E0                      l750 03A9                      l830 01EB  
                    l822 01B5                      l806 016D                      l814 0182  
                    l728 0104                      l736 011C                      l760 03BD  
                    l752 03AB                      l744 039E                      l832 01EC  
                    l824 01BE                      l816 0189                      l808 0175  
                    l738 0121                      l770 03E4                      l762 03C4  
                    l754 03AF                      l746 03A0                      l834 01F5  
                    l826 01C0                      l818 01A2                      l772 03EB  
                    l764 03C8                      l756 03B4                      l748 03A4  
                    l836 01F7                      l828 01D9                      l766 03CC  
                    l758 03BA                      l774 03F1                      l790 0139  
                    l782 012B                      l776 03F6                      l768 03DA  
                    l792 013D                      l784 0133                      l698 00BB  
                    l778 03FB                      l794 0147                      l786 0135  
                    l796 014E                      l788 0137                      l798 014F  
                    _RB0 0038                      _RB3 003B                      _RB4 003C  
                    _RB5 003D                      u300 011C                      u220 00C1  
                    u301 011B                      u221 00C0                      u310 0121  
                    u230 00CC                      u311 0120                      u231 00CB  
                    u240 00DD                      u400 03F6                      u320 03A4  
                    u241 00DC                      u401 03F5                      u321 03A3  
                    u330 03AF                      u410 0147                      u331 03AE  
                    u411 0146                      u260 00EF                      u340 03BA  
                    u261 00EE                      u341 03B9                      u255 00E2  
                    u280 0104                      u360 03CC                      u281 0103  
                    u361 03CB                      u425 0155                      u370 03DA  
                    u275 00F1                      u371 03D9                      u355 03BF  
                    u285 0100                      u437 0167                      u390 03F1  
                    u295 0111                      u391 03F0                      u375 03D6  
                    u447 017B                      u385 03E6                      u457 01BA  
                    u467 01F1                      fsr0 0004                      indf 0000  
           ___awmod@sign 0015                     _main 012B                     btemp 000C  
                   start 0000                    ?_main 0010          __end_of___awdiv 012B  
        __end_of___awmod 0400                    _ANSEL 002A          ___awdiv@divisor 0010  
        ___awdiv@counter 0014                    _PORTA 0006                    _PORTB 0007  
                  _PORTC 0008                    _TRISA 0006                    _TRISB 0007  
                  _TRISC 0008                    main@t 001A                    ltemp0 000C  
                  ttemp0 000C                    status 0003                    wtemp0 000C  
                  wtemp1 000E          __initialization 0003             __end_of_main 0200  
                 ??_main 0018         ___awdiv@dividend 0012                   _OPTION 0000  
              ??___awdiv 0000                ??___awmod 0000                   _digits 0030  
       ___awdiv@quotient 0016          ___awmod@divisor 0010          ___awmod@counter 0014  
__end_of__initialization 0064           __pcstackCOMMON 0000             __pidataBANK1 0068  
             __pmaintext 012B                  _CM1CON0 0027                  _CM2CON0 0028  
                ___awdiv 00BB                  ___awmod 039E                  __ptext1 039E  
                __ptext2 00BB         ___awmod@dividend 0012     end_of_initialization 0064  
    start_initialization 0003              __pdataBANK1 0030                ___latbits 0002  
          __pcstackBANK0 0010                __pjmp_tab 0078                 ?___awdiv 0010  
               ?___awmod 0010         __size_of___awdiv 0070         __size_of___awmod 0062  
          entry____awdiv 007B            entry____awmod 0078            __size_of_main 00D5  
